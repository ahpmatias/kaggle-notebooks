{"metadata":{"colab":{"name":"data_preprocessing_template.ipynb","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyOD2/gZgY69JdiiGJVNfu7s"},"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":30646,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Data Preprocessing Template","metadata":{"id":"WOw8yMd1VlnD","colab_type":"text"}},{"cell_type":"markdown","source":"## Importing the libraries","metadata":{"id":"NvUGC8QQV6bV","colab_type":"text"}},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","metadata":{"id":"wfFEXZC0WS-V","colab_type":"code","colab":{},"execution":{"iopub.status.busy":"2024-02-11T15:53:38.706199Z","iopub.execute_input":"2024-02-11T15:53:38.707035Z","iopub.status.idle":"2024-02-11T15:53:38.712788Z","shell.execute_reply.started":"2024-02-11T15:53:38.706988Z","shell.execute_reply":"2024-02-11T15:53:38.711796Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":"## Importing the datasets","metadata":{"id":"fhYaZ-ENV_c5","colab_type":"text"}},{"cell_type":"code","source":"train_data = pd.read_csv('/kaggle/input/titanic/train.csv')\ntrain_data = train_data[['PassengerId', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked', 'Survived']]\n\ntest_data = pd.read_csv('/kaggle/input/titanic/test.csv')\ntest_data.head()","metadata":{"id":"aqHTg9bxWT_u","colab_type":"code","colab":{},"execution":{"iopub.status.busy":"2024-02-11T15:53:38.727085Z","iopub.execute_input":"2024-02-11T15:53:38.730675Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Understanding the data","metadata":{}},{"cell_type":"markdown","source":"## Removing irrelevant columns","metadata":{}},{"cell_type":"code","source":"train_data_reduced = train_data[['Sex', 'PassengerId', 'Pclass', 'Age', 'SibSp',\n       'Parch', 'Survived']]\n\ntest_data_reduced = test_data[['Sex', 'PassengerId', 'Pclass', 'Age', 'SibSp',\n       'Parch']]\n\nX_train = train_data_reduced.iloc[:, :-1].values\ny_train = train_data_reduced.iloc[:,-1].values\nX_test = test_data_reduced.iloc[:, :-1].values\n\nprint(y_train)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Encoding categorical data\n#### *It is to be considered as categories the columns \"Sex\" and \"Embarked\"","metadata":{"id":"3abSxRqvWEIB","colab_type":"text"}},{"cell_type":"code","source":"# \"Sex\" Column changed to numerical variable: 0 for \"male\", 1 for \"female\"\ntrain_data_reduced['Sex'].replace(['male', 'female'], [0, 1], inplace=True)\ntest_data_reduced['Sex'].replace(['male', 'female'], [0, 1], inplace=True)\n\n# \"Embarked\" Column changed to numerical variable: 0 for \"C\", 1 for \"Q\" and 2 for \"S\"\n# reduced_df['Embarked'].replace(['C', 'Q', 'S'], [0, 1, 2], inplace=True)\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\n\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nX_train = np.array(ct.fit_transform(X_train))\nX_test = np.array(ct.fit_transform(X_test))\n\ntrain_data_reduced.head()\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Taking care of missing data","metadata":{}},{"cell_type":"code","source":"from sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan, strategy='mean')\nimputer.fit(X_train[:, 3:6])\nX_train[:, 3:6] = imputer.transform(X_train[:, 3:6])\nimputer.fit(X_test[:, 3:6])\nX_test[:, 3:6] = imputer.transform(X_test[:, 3:6])","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"reduced_df.corr(method='pearson')","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}